{
	"compiler": {
		"version": "0.8.30+commit.73712a01"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "previousOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "pollId",
						"type": "uint256"
					}
				],
				"name": "PollClosed",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "pollId",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "string",
						"name": "question",
						"type": "string"
					},
					{
						"indexed": false,
						"internalType": "string[]",
						"name": "options",
						"type": "string[]"
					}
				],
				"name": "PollCreated",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "pollId",
						"type": "uint256"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "voter",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "optionIndex",
						"type": "uint256"
					}
				],
				"name": "VoteCast",
				"type": "event"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "pollId",
						"type": "uint256"
					}
				],
				"name": "closePoll",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "question",
						"type": "string"
					},
					{
						"internalType": "string[]",
						"name": "options",
						"type": "string[]"
					}
				],
				"name": "createPoll",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "pollId",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "pollId",
						"type": "uint256"
					}
				],
				"name": "getOptionCount",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "pollId",
						"type": "uint256"
					}
				],
				"name": "getPoll",
				"outputs": [
					{
						"internalType": "string",
						"name": "question",
						"type": "string"
					},
					{
						"internalType": "string[]",
						"name": "options",
						"type": "string[]"
					},
					{
						"internalType": "uint256[]",
						"name": "votes",
						"type": "uint256[]"
					},
					{
						"internalType": "bool",
						"name": "isOpen",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getPollCount",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "pollId",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "voter",
						"type": "address"
					}
				],
				"name": "hasVoted",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "pollId",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "optionIndex",
						"type": "uint256"
					}
				],
				"name": "vote",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"details": "No external dependencies; designed for easy use in Remix + testnets.",
			"kind": "dev",
			"methods": {
				"getPoll(uint256)": {
					"details": "Returns copies of dynamic arrays for easy front-end consumption."
				}
			},
			"title": "Simple On-Chain Voting (Classroom Demo)",
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"closePoll(uint256)": {
					"notice": "Close a poll to prevent further voting (results remain readable)."
				},
				"createPoll(string,string[])": {
					"notice": "Create a new poll with a question and 2â€“10 options."
				},
				"getOptionCount(uint256)": {
					"notice": "Number of options in a poll (handy for UI bounds)."
				},
				"getPoll(uint256)": {
					"notice": "Read poll metadata and current tallies."
				},
				"hasVoted(uint256,address)": {
					"notice": "Check if an address has voted in a given poll."
				},
				"vote(uint256,uint256)": {
					"notice": "Cast a vote for a given option on an open poll."
				}
			},
			"notice": "Instructor (contract owner) can create multiple-choice polls; each address can vote once per poll.",
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/voting.sol": "Voting"
		},
		"evmVersion": "prague",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/voting.sol": {
			"keccak256": "0x51d43092a31043b9aa01037ed9099e018455cd40c0051b8f4c006f736e68b87d",
			"license": "MIT",
			"urls": [
				"bzz-raw://852f160c6761df531be99b81b338e44b38e95029bcbb9ed6fa74e47bd449a163",
				"dweb:/ipfs/QmeRB9X6obSB7JG5h5BngSmQ8UDyFy2czeeyZZ6aafdzvQ"
			]
		}
	},
	"version": 1
}